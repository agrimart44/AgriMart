name: Flutter CI/CD with Android Emulator (Software Rendering)

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Frontend # Set the working directory for all steps

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0' # Specify your Flutter version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Set up Android Emulator (Software Rendering)
      - name: Set up Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30 # Android API level
          target: google_apis # Use Google APIs
          arch: x86_64 # Architecture
          profile: pixel_3a # Device profile
          emulator-options: '-no-snapshot -gpu swiftshader_indirect' # Enable software rendering
          script: |
            echo "Running tests on the emulator..."
            flutter test --coverage # Run unit tests
            flutter test test/widget_test.dart # Run widget tests
            flutter test integration_test/app_test.dart # Run integration tests

      # Step 5: Decode Keystore
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      # Step 6: Build the Flutter app
      - name: Build Android APK
        run: flutter build apk --release
        env:
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}

      # Step 7: Deploy to Firebase App Distribution
      - name: Deploy to Firebase
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }} # Firebase App ID
          token: ${{ secrets.FIREBASE_TOKEN }} # Firebase CI token
          testers: rukshancoc@gmail.com # Add your email as a tester
          file: build/app/outputs/flutter-apk/app-release.apk # Path to the APK