import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart'; // Import Firebase Core
import 'package:namer_app/ChatScreen/seller_chat_provider.dart';
import 'package:provider/provider.dart'; // Import the Provider package
import 'package:namer_app/ChatScreen/chat_screen.dart';
import 'package:namer_app/Presentation/Price_analysis.dart';
import 'package:namer_app/Presentation/first_screen/Login.dart';
import 'package:namer_app/Presentation/first_screen/first_screen.dart';
import 'package:namer_app/Presentation/registerpage/registerpage.dart';
import 'package:namer_app/Settings/settings_main_page.dart';
import 'ChatScreen/chat_list_page.dart';
import 'firebase_options.dart'; // This file will be generated by flutterfire configure

//import localization
import 'package:flutter_gen/gen_l10n/app_localizations.dart';

import 'package:flutter_localizations/flutter_localizations.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized(); // Ensure Flutter is ready before Firebase is initialized.

  // Initialize Firebase with platform-specific options
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform, // Firebase options generated by flutterfire configure
  );
  runApp(MyApp());
}

//create a class to manage the language that user selected via app
class LanguageProvider extends ChangeNotifier {

}


class MyApp extends StatefulWidget {
  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        // Add your SellerChatProvider or any other providers here
        ChangeNotifierProvider(create: (context) => SellerChatProvider()),
      ],
      child: MaterialApp(
        debugShowCheckedModeBanner: false,
          //add localization delegate.
          localizationsDelegates: const [
            AppLocalizations.delegate,
            GlobalMaterialLocalizations.delegate,
            GlobalWidgetsLocalizations.delegate
          ],

          // manually change language for testing purpose.
          locale: Locale("si"),
          //add languages
          supportedLocales: const [
            Locale('en'), // English
            Locale('si'), // Sinhala
            Locale('ta'), // Tamil
          ],
        home: FirstScreen(), // Your home screen
      ),
    );
  }
}